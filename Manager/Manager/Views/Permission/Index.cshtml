@model IEnumerable<Manager.Models.Permission>;
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
 <main class="page-content">
    <div class="page-header">
      <p class="fw">Danh sách tên miền đen</p>
       <!-- Button HTML (to Trigger Modal) -->
    <button type="button" href="#myModal" role="button" onclick="ShowFormAdd()" class="btn btn-primary" data-bs-toggle="modal">Thêm mới</button>
     <!-- Modal HTML -->
    <div id="myModal" class="modal fade" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Thêm Mới Quyền</h5>
                    <button type="button" onclick="HideForm()" class="btn-close btn btn-default" data-bs-dismiss="modal"> <i class="fa fa-times" aria-hidden="true"></i></button>
                </div>
                <div class="modal-body">
                  <form id="myFrom">                                        
                     <div class="mb-3">
                      <input  type="text" class="form-control" hidden id="PermissionId" aria-describedby="emailHelp">
                    
                    </div>
                    <div class="mb-3">
                      <label for="exampleInputEmail1" class="form-label">Tên Quyền</label>
                      <input  required name="PermissionName" type="text" class="form-control"  id="PermissionName" aria-describedby="emailHelp">
                    
                    </div>
                     <div class="form-group">
                        <label for="exampleFormControlSelect1">Chọn Parent</label>
                         <select class="form-select form-control select" id="ParentId"  aria-label="Default select example">
                            <option value="">Parent</option>
                             @foreach (var item in ViewBag.Permisions)
                            {
                                <option class="form-control" value="@item.PermissionId">@item.PermissionName</option>
                            }                  
                         </select>
                    </div>
                      <div class="mb-3 text-right">
                      <button type="button" onclick="AddOrUpdate()" class="btn btn-primary btn-add">Thêm</button>
                    </div>
                 </form>
                </div>
            </div>
        </div>
    </div>
    </div>
    <div class="page-search">
      <div id="accordion">
        <div class="card">
          <div class="card-header" id="headingOne">
            <span><i b-eginzb9zup="" class="fa fa-search" aria-hidden="true"></i></span>
            <h5 class="mb-0">
              <button class="btn btn-link" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                <i class="fa fa-arrow-down" aria-hidden="true"></i>
              </button>
            </h5>
          </div>
      
          <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordion">
            <div class="card-body">
              <div class="input-groups">
                 <form method="get" style="display:flex">
                      <label style="margin-right:10px" for="">Tên Quyền</label>
                    <div>
                    <div>
                    <input type="text" name="filter">
                    </div> 
                    <button type="submit" class="btn btn-primary">Tìm kiếm</button>
                    </div>     
                 </form>    
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="page-content-table">
      <table class="table table-bordered" id="dataTable" cellpadding=0>
        <thead>
          <tr>
            <th scope="col">Tên Quyền</th>
          </tr>
        </thead>
        <tbody id="tableContext">
             @if(Model != null && Model.Count() > 0)
             {
                @foreach (var permision in Model)
                {
                   <tr>                            
                       <td> <span class="collapses collapsible" data-loaded="false" pid="@permision.PermissionId">&nbsp;</span>
                           <span class="tbpermisionname">@permision.PermissionName</span>
                           <button style="margin-right:20px" href="#myModal" data-bs-toggle="modal" onclick="ShowFormUpdate('@permision.PermissionId')" type="button" class="btn btn-default">Chỉnh sửa</button>
                           <a style="cursor:pointer" onclick="Delete('@permision.PermissionId')" class="btn btn-light">Xóa</a>
                       </td>
                   </tr>                        
                }
             }
        </tbody>
      </table>
    </div>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css"/>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.12.1/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/jstree.min.js"></script>
  </main>
    <div class="alert alert-primary" id="notify" role="alert">
       Thêm Mới Thành Công
    </div>
@section Scripts{
    <script src="/js/MyTreeViewTable.js"></script>
}
<script>

    var PermissionId = "";
     function Validate(){
        $("input[required]").each(function () {
          let value = $(this).val();
          if (!value) {
            $(this).addClass("s-input-error");
            $(this).attr("validate", false);
            $(this).attr("title", "Không thể bỏ trống");
          } else {
            $(this).removeClass("s-input-error");
            $(this).attr("validate", true);
          }
          });
     }  
    function ShowFormAdd(){
        var employeeId = "";
        $.ajax({
            type: 'Get',
            url: '/Home/NewCodeEmployee',
            contentType: 'application/json; charset=utf-8',
            async: false,
            success: function (data) {             
                $('#EmployeeCode').val(data);                          
            }
        })
    };
    function Delete(PermissionId) {
        var result = confirm("Bạn có muốn xóa quyền này không?");
        if (result) {
            var Url = "";
            Url = "/Permission/Delete"
            $.ajax({
                type: 'Post',
                url: Url,
                data: { id: PermissionId },
                async: false,
                success: function () {
                    window.location.pathname = "/Permission/Index"
                },
                error: function (data) {
                    console.log(data);
                }
            })
        } else {
    
        }
    }
    function HideForm() {
        $('#myFrom')[0].reset();
        $('#ParentId').prop('selectedIndex',0)
        $('.btn-add').html('Thêm');
        var PermissionId = "";
    }
    function ShowFormUpdate(PermissionId) {
        this.PermissionId = PermissionId;
         $('.btn-add').html('Sửa');
        $.ajax({
            type: 'Get',
            url: '/Permission/Get',
            contentType: 'application/json; charset=utf-8',
            data: { id: PermissionId },
            async: false,
            success: function (data) {
               $('#PermissionName').val(data.permissionName);
               this.PermissionId = data.permissionId;
                var option = $('.modal-body option');
                for (var i = 0; i < option.length; i++) {
                    var ParentId = option[i].value;
                    var parent = data.parentId;
                    if (ParentId == data.parentId) {
                        option[i].setAttribute('selected', true);
                    }
                    else {
                        option[i].removeAttribute('selected');
                    }
                }
            }
        })
    }
    function AddOrUpdate(){
        debugger
            var data = {
                PermissionId:this.PermissionId,
                PermissionName:$('#PermissionName').val(),
                ParentId:$('#ParentId').val()
            };   
            
            this.Validate();
              let validateInput = $('input[validate="false"]');
                if (validateInput && validateInput.length > 0) {
                  alert("Bạn hãy điền đủ các trường thông tin");
                  $(validateInput)[0].focus();
                  return;
                }
            if(this.PermissionId==""){
            $.ajax({
                type: 'Post',
                url: '@Url.Action("Create", "Permission")',           
                dataType:"json",
                data: { permission: data },
                async:false,
                success: function (result) {
                    window.location.pathname="/Permission/Index"
                },
                error: function (data) {
                    console.log(data);
                }
            })
            }
            else{           
            $.ajax({
                type: 'Post',
                url: '@Url.Action("Edit", "Permission")',           
                dataType:"json",
                data: { permission: data },
                async:false,
                success: function (result) {
                    window.location.pathname="/Permission/Index"
                },
                error: function (data) {
                    console.log(data);
                }
            })
        }
    }
</script>
